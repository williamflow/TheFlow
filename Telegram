#!/usr/bin/python3

from zmqDealer import zmqDealer
from telegram.ext import Updater, CommandHandler, Filters, MessageHandler, BaseFilter
from Config import TOKEN
import threading


class Telegram:
    def __init__(self, token, identity):
        self.node = zmqDealer(identity)
        self.updater = Updater(token=token)
        self.filternull = FilterNull()
        self.updater.dispatcher.add_handler(MessageHandler(self.filternull, self.callbackout))
        threading.Thread(target=self.callbackin).start()
        self.updater.start_polling()
        
    def callbackout(self, bot, update):
        print("Telegram out:", update.message.chat.id, update.message.text)
        self.node.send([update.message.chat.id, update.message.text])
        
    def callbackin(self):
        while True:
            data = self.node.receive()
            print("Telegram in: ", data)
            self.updater.bot.send_message(data[-2], data[-1])
        
        
class FilterNull(BaseFilter):
    def filter(self, message):
        return True
        
if __name__ == "__main__":
    Telegram(TOKEN, "telegram")
